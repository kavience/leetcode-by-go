(self.webpackChunk=self.webpackChunk||[]).push([[933],{3008:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-5877f7f2",path:"/medium/container-with-most-water.html",title:"盛最多水的容器",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"题目",slug:"题目",children:[]},{level:2,title:"解法一",slug:"解法一",children:[]},{level:2,title:"解法二",slug:"解法二",children:[]}],filePathRelative:"medium/container-with-most-water.md",git:{updatedTime:162459267e4,contributors:[]}}},7875:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>o});var t=a(6252);const p=(0,t.uE)('<h1 id="盛最多水的容器"><a class="header-anchor" href="#盛最多水的容器">#</a> 盛最多水的容器</h1><p>难度：4/10</p><p>类型：数组</p><h2 id="题目"><a class="header-anchor" href="#题目">#</a> 题目</h2><p>给你 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p><p><code>说明</code>：你不能倾斜容器。</p><p>示例 1：</p>',7),e=(0,t.uE)('<blockquote><p>输入：[1,8,6,2,5,4,8,3,7]</p><p>输出：49</p><p>解释：图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p></blockquote><h2 id="解法一"><a class="header-anchor" href="#解法一">#</a> 解法一</h2><p>暴力循环，两层 for 循环</p><p>时间复杂度：O(n^2)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// 方法一</span>\n<span class="token keyword">func</span> <span class="token function">maxArea1</span><span class="token punctuation">(</span>height <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">0</span>\n\t<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">for</span> j <span class="token operator">:=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">{</span>\n\t\t\tx <span class="token operator">:=</span> j <span class="token operator">-</span> i\n\t\t\ty <span class="token operator">:=</span> math<span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span><span class="token function">float64</span><span class="token punctuation">(</span>height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>height<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t\tarea <span class="token operator">:=</span> x <span class="token operator">*</span> <span class="token function">int</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>\n\t\t\t<span class="token keyword">if</span> result <span class="token operator">&lt;</span> area <span class="token punctuation">{</span>\n\t\t\t\tresult <span class="token operator">=</span> area\n\t\t\t<span class="token punctuation">}</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> result\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="解法二"><a class="header-anchor" href="#解法二">#</a> 解法二</h2><p>动态规划，左右夹逼，只循环一次</p><p>时间复杂度：O(n)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// 方法二</span>\n<span class="token keyword">func</span> <span class="token function">maxArea2</span><span class="token punctuation">(</span>height <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> <span class="token punctuation">(</span>\n\t\tresult <span class="token operator">=</span> <span class="token number">0</span>\n\t\ti      <span class="token operator">=</span> <span class="token number">0</span>\n\t\tj      <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>\n\t<span class="token punctuation">)</span>\n\t<span class="token keyword">for</span> i <span class="token operator">&lt;</span> j <span class="token punctuation">{</span>\n\t\t<span class="token keyword">var</span> y <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span><span class="token function">float64</span><span class="token punctuation">(</span>height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>height<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\tresult <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">Max</span><span class="token punctuation">(</span><span class="token function">float64</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>j<span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t<span class="token keyword">if</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> height<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\t\t\ti<span class="token operator">++</span>\n\t\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n\t\t\tj<span class="token operator">--</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> result\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/container-with-most-water</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>',12),o={render:function(n,s){return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("img",{src:n.$withBase("/container-with-most-water.jpeg"),alt:"container-with-most-water"},null,8,["src"]),e],64)}}}}]);